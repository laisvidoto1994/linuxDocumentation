<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">

<html>

<head>

<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">

<title>Guia Foca GNU/Linux - Execução de programas</title>

</head>

<body>

<a name="ch-run"></a>
<hr>

[ <a href="ch-boot.htm">anterior</a> ]
[ <a href="index.htm#contents">Conteúdo</a> ]
[ <a href="ch-intro.htm">1</a> ]
[ <a href="ch-bas.htm">2</a> ]
[ <a href="ch-hardw.htm">3</a> ]
[ <a href="ch-d-l.htm">4</a> ]
[ <a href="ch-disc.htm">5</a> ]
[ <a href="ch-boot.htm">6</a> ]
[ 7 ]
[ <a href="ch-cmdd.htm">8</a> ]
[ <a href="ch-cmd.htm">9</a> ]
[ <a href="ch-cmdv.htm">10</a> ]
[ <a href="ch-cmdn.htm">11</a> ]
[ <a href="ch-cmdc.htm">12</a> ]
[ <a href="ch-perm.htm">13</a> ]
[ <a href="ch-redir.htm">14</a> ]
[ <a href="ch-rede.htm">15</a> ]
[ <a href="ch-kern.htm">16</a> ]
[ <a href="ch-log.htm">17</a> ]
[ <a href="ch-cpctd.htm">18</a> ]
[ <a href="ch-deb.htm">19</a> ]
[ <a href="ch-dpkg.htm">20</a> ]
[ <a href="ch-pers.htm">21</a> ]
[ <a href="ch-impr.htm">22</a> ]
[ <a href="ch-cfg.htm">23</a> ]
[ <a href="ch-tasks.htm">24</a> ]
[ <a href="ch-compil.htm">25</a> ]
[ <a href="ch-manut.htm">26</a> ]
[ <a href="ch-etc.htm">27</a> ]
[ <a href="ch-inter.htm">28</a> ]
[ <a href="ch-x11.htm">29</a> ]
[ <a href="ch-aplic.htm">30</a> ]
[ <a href="ch-ajuda.htm">31</a> ]
[ <a href="ch-apend.htm">32</a> ]
[ <a href="ch-cmdd.htm">próximo</a> ]

<hr>

<h1>
Guia Foca GNU/Linux
<br>Capítulo 7 - Execução de programas
</h1>

<hr>

<p>
Este capítulo explica como executar programas no <code>GNU/Linux</code> e o uso
das ferramentas de controle de execução dos programas.

<hr>

<a name="s-run-prgn"></a>
<h2>7.1 Executando um comando/programa</h2>

<p>
Para executar um comando, é necessário que ele tenha permissões de execução
(veja <a href="ch-perm.htm#s-perm-tipos">Tipos de Permissões de acesso, Seção
13.2</a> e <a href="ch-cmdd.htm#s-comando-ls">ls, Seção 8.1</a>) e que esteja
no caminho de procura de arquivos (veja <a href="#s-run-path">path, Seção
7.2</a>).

<p>
No aviso de comando <em>#</em>(root) ou <em>$</em>(usuário), digite o nome do
comando e tecle Enter.  O programa/comando é executado e receberá um número de
identificação (chamado de PID - Process Identification), este número é útil
para identificar o processo no sistema e assim ter um controle sobre sua
execução (será visto mais adiante neste capítulo).

<p>
Todo o programa recebe uma identificação de usuário (UID) quando é executado o
que determina quais serão suas permissões de acesso durante sua execução.  O
programa normalmente usa o UID do usuário que o executou ou o usuário
configurado pelo bit de permissão de acesso SUID caso estiver definido.
Existem também programas que são executados como root e modificam sua
identificação de usuário para algum que tenha menos privilégios no sistema
(como o <code>Apache</code>, por exemplo).  Para maiores detalhes veja <a
href="ch-perm.htm">Permissões de acesso a arquivos e diretórios, Capítulo
13</a>.

<p>
Todo o programa executado no <code>GNU/Linux</code> roda sob o controle das
permissões de acesso.  Recomendo ver mais tarde o <a
href="ch-perm.htm">Permissões de acesso a arquivos e diretórios, Capítulo
13</a>.

<p>
Exemplos de comandos: <samp>ls</samp>, <samp>df</samp>, <samp>pwd</samp>.

<hr>

<a name="s-run-path"></a>
<h2>7.2 path</h2>

<p>
Path é o caminho de procura dos arquivos/comandos executáveis.  O path
(caminho) é armazenado na variável de ambiente <code>PATH</code>.  Você pode
ver o conteúdo desta variável com o comando <samp>echo $PATH</samp>.

<p>
Por exemplo, o caminho <samp>/usr/local/bin:/usr/bin:/bin:/usr/bin/X11</samp>
significa que se você digitar o comando <samp>ls</samp>, o interpretador de
comandos iniciará a procura do programa <code>ls</code> no diretório
<code>/usr/local/bin</code>, caso não encontre o arquivo no diretório
<code>/usr/local/bin</code> ele inicia a procura em <code>/usr/bin</code>, até
que encontre o arquivo procurado.

<p>
Caso o interpretador de comandos chegue até o último diretório do path e não
encontre o arquivo/comando digitado, é mostrada a seguinte mensagem:

<p>
<samp>bash: ls: command not found</samp> (comando não encontrado).

<p>
O caminho de diretórios vem configurado na instalação do Linux, mas pode ser
alterado no arquivo <code>/etc/profile</code>.  Caso deseje alterar o caminho
para todos os usuários, este arquivo é o melhor lugar, pois ele é lido por
todos os usuários no momento do login.

<p>
Caso um arquivo/comando não esteja localizado em nenhum dos diretórios do path,
você deve executa-lo usando um <samp>./</samp> na frente do comando.

<p>
Se deseja alterar o <samp>path</samp> para um único usuário, modifique o
arquivo <code>.bash_profile</code> em seu diretório de usuário (home).

<p>
<strong>OBSERVAÇÃO:</strong> Por motivos de segurança, não inclua o diretório
atual <code>$PWD</code> no <samp>path</samp>.

<hr>

<a name="s-run-tipos"></a>
<h2>7.3 Tipos de Execução de comandos/programas</h2>

<p>
Um programa pode ser executado de duas formas:
<ol type="1" start="1" >
<li>
<samp>Primeiro Plano</samp> - Também chamado de <em>foreground</em>.  Quando
você deve esperar o término da execução de um programa para executar um novo
comando.  Somente é mostrado o aviso de comando após o término de execução do
comando/programa.
</li>
<li>
<samp>Segundo Plano</samp> - Também chamado de <em>background</em>.  Quando
você não precisa esperar o término da execução de um programa para executar um
novo comando.  Após iniciar um programa em <em>background</em>, é mostrado um
número PID (identificação do Processo) e o aviso de comando é novamente
mostrado, permitindo o uso normal do sistema.
<p>
O programa executado em background continua sendo executado internamente.  Após
ser concluído, o sistema retorna uma mensagem de pronto acompanhado do número
PID do processo que terminou.
</li>
</ol>

<p>
Para iniciar um programa em <samp>primeiro plano</samp>, basta digitar seu nome
normalmente.  Para iniciar um programa em <samp>segundo plano</samp>,
acrescente o caracter <samp>&quot;&amp;&quot;</samp> após o final do comando.

<p>
OBS: Mesmo que um usuário execute um programa em segundo plano e saia do
sistema, o programa continuará sendo executado até que seja concluído ou
finalizado pelo usuário que iniciou a execução (ou pelo usuário root).

<p>
Exemplo: <samp>find / -name boot.b &amp;</samp>

<p>
O comando será executado em segundo plano e deixará o sistema livre para outras
tarefas.  Após o comando <code>find</code> terminar, será mostrada uma
mensagem.

<hr>

<a name="s-run-seq"></a>
<h2>7.4 Executando programas em seqüência</h2>

<p>
Os comandos podem ser executados em seqüência (um após o término do outro) se
os separarmos com &quot;;&quot;.  Por exemplo: <samp>echo primeiro;echo
segundo;echo terceiro</samp>

<hr>

<a name="s-run-ps"></a>
<h2>7.5 ps</h2>

<p>
Algumas vezes é útil ver quais processos estão sendo executados no computador.
O comando <code>ps</code> faz isto, e também nos mostra qual usuário executou o
programa, hora que o processo foi iniciado, etc.

<p>
<samp>ps [<em>opções</em>]</samp>

<p>
Onde:
<dl>
<dt><em>opções</em></dt>
<dt>a</dt>
<dd>
Mostra os processos criados por você e de outros usuários do sistema.
</dd>
<dt>x</dt>
<dd>
Mostra processos que não são controlados pelo terminal.
</dd>
<dt>u</dt>
<dd>
Mostra o nome de usuário que iniciou o processo e hora em que o processo foi
iniciado.
</dd>
<dt>m</dt>
<dd>
Mostra a memória ocupada por cada processo em execução.
</dd>
<dt>f</dt>
<dd>
Mostra a árvore de execução de comandos (comandos que são chamados por outros
comandos).
</dd>
<dt>e</dt>
<dd>
Mostra variáveis de ambiente no momento da inicialização do processo.
</dd>
<dt>w</dt>
<dd>
Mostra a continuação da linha atual na próxima linha ao invés de cortar o
restante que não couber na tela.
</dd>
<dt>--sort:<em>[coluna]</em></dt>
<dd>
Organiza a saída do comando <code>ps</code> de acordo com a coluna escolhida.
Você pode usar as colunas <samp>pid, utime, ppid, rss, size, user,
priority</samp>.
<p>
Pode ser especificada uma listagem em ordem inversa especificando
<samp>--sort:[-coluna]</samp>.  Para mais detalhes e outras opções, veja a
página de manual.
</dd>
</dl>

<p>
As opções acima podem ser combinadas para resultar em uma listagem mais
completa.  Você também pode usar pipes &quot;|&quot; para <samp>filtrar</samp>
a saída do comando <code>ps</code>.  Para detalhes, veja <a
href="ch-redir.htm#s-redir-pipe">| (pipe), Seção 14.5</a>.

<p>
Ao contrário de outros comandos, o comando <code>ps</code> não precisa do hífen
&quot;-&quot; para especificar os comandos.  Isto porque ele não utiliza opções
longas e não usa parâmetros.

<p>
Exemplos: <samp>ps</samp>, <samp>ps ax|grep inetd</samp>, <samp>ps auxf</samp>,
<samp>ps auxw</samp>.

<hr>

<a name="s-run-top"></a>
<h2>7.6 top</h2>

<p>
Mostra os programas em execução ativos, parados, tempo usado na CPU, detalhes
sobre o uso da memória RAM, Swap, disponibilidade para execução de programas no
sistema, etc.

<p>
<code>top</code> é um programa que continua em execução mostrando continuamente
os processos que estão rodando em seu computador e os recursos utilizados por
eles.  Para sair do <code>top</code>, pressione a tecla <samp>q</samp>.

<p>
<samp>top [<em>opções</em>]</samp>

<p>
Onde:
<dl>
<dt>-d [tempo]</dt>
<dd>
Atualiza a tela após o [tempo] (em segundos).
</dd>
<dt>-s</dt>
<dd>
Diz ao <code>top</code> para ser executado em modo seguro.
</dd>
<dt>-i</dt>
<dd>
Inicia o <code>top</code> ignorando o tempo de processos zumbis.
</dd>
<dt>-c</dt>
<dd>
Mostra a linha de comando ao invés do nome do programa.
</dd>
</dl>

<p>
A ajuda sobre o <code>top</code> pode ser obtida dentro do programa
pressionando a tecla <samp>h</samp> ou pela página de manual (<samp>man
top</samp>).

<p>
Abaixo algumas teclas úteis:
<ul>
<li>
<samp>espaço</samp> - Atualiza imediatamente a tela.
</li>
</ul>
<ul>
<li>
<samp>CTRL</samp>+<samp>L</samp> - Apaga e atualiza a tela.
</li>
</ul>
<ul>
<li>
<samp>h</samp> - Mostra a tela de ajuda do programa.  É mostrado todas as
teclas que podem ser usadas com o <code>top</code>.
</li>
</ul>
<ul>
<li>
<samp>i</samp> - Ignora o tempo ocioso de processos zumbis.
</li>
</ul>
<ul>
<li>
<samp>q</samp> - Sai do programa.
</li>
</ul>
<ul>
<li>
<samp>k</samp> - Finaliza um processo - semelhante ao comando
<code>kill</code>.  Você será perguntado pelo número de identificação do
processo (PID).  Este comando não estará disponível caso esteja usando o
<code>top</code> com a opção <samp>-s</samp>.
</li>
</ul>
<ul>
<li>
<samp>n</samp> - Muda o número de linhas mostradas na tela.  Se 0 for
especificado, será usada toda a tela para listagem de processos.
</li>
</ul>

<hr>

<a name="s-run-controle"></a>
<h2>7.7 Controle de execução de processos</h2>

<p>
Abaixo algumas comandos e métodos úteis para o controle da execução de
processos no <code>GNU/Linux</code>.

<hr>

<a name="s-run-break"></a>
<h3>7.7.1 Interrompendo a execução de um processo</h3>

<p>
Para cancelar a execução de algum processo <samp>rodando em primeiro
plano</samp>, basta pressionar as teclas <samp>CTRL</samp>+<samp>C</samp>.  A
execução do programa será cancelada e será mostrado o aviso de comando.  Você
também pode usar o comando <a href="#s-run-kill">kill, Seção 7.7.6</a> para
interromper um processo sendo executado.

<hr>

<a name="s-run-pausa"></a>
<h3>7.7.2 Parando momentaneamente a execução de um processo</h3>

<p>
Para parar a execução de um processo rodando em primeiro plano, basta
pressionar as teclas <samp>CTRL</samp>+<samp>Z</samp>.  O programa em execução
será pausado e será mostrado o número de seu job e o aviso de comando.

<p>
Para retornar a execução de um comando pausado, use <a href="#s-run-fg">fg,
Seção 7.7.4</a> ou <a href="#s-run-bg">bg, Seção 7.7.5</a>.

<p>
O programa permanece na memória no ponto de processamento em que parou quando
ele é interrompido.  Você pode usar outros comandos ou rodar outros programas
enquanto o programa atual está interrompido.

<hr>

<a name="s-run-ver-backgrounds"></a>
<h3>7.7.3 jobs</h3>

<p>
O comando <code>jobs</code> mostra os processos que estão parados ou rodando em
<em>segundo plano</em>.  Processos em segundo plano são iniciados usando o
símbolo <samp>&quot;&amp;&quot;</samp> no final da linha de comando (veja <a
href="#s-run-tipos">Tipos de Execução de comandos/programas, Seção 7.3</a>) ou
através do comando <code>bg</code>.

<p>
<samp>jobs</samp>

<p>
O número de identificação de cada processo parado ou em segundo plano (job), é
usado com os comandos <a href="#s-run-fg">fg, Seção 7.7.4</a> e <a
href="#s-run-bg">bg, Seção 7.7.5</a>.  Um processo interrompido pode ser
finalizado usando-se o comando <samp>kill %[num]</samp>, onde
<samp>[num]</samp> é o número do processo obtido pelo comando
<code>jobs</code>.

<hr>

<a name="s-run-fg"></a>
<h3>7.7.4 fg</h3>

<p>
Permite fazer um programa rodando em segundo plano ou parado, rodar em primeiro
plano.  Você deve usar o comando <code>jobs</code> para pegar o número do
processo rodando em segundo plano ou interrompida, este número será passado ao
comando <code>fg</code> para ativa-lo em primeiro plano.

<p>
<samp>fg [<em>número</em>]</samp>

<p>
Onde <em>número</em> é o número obtido através do comando <code>jobs</code>.

<p>
Caso seja usado sem parâmetros, o <code>fg</code> utilizará o último programa
interrompido (o maior número obtido com o comando <code>jobs</code>).

<p>
Exemplo: <samp>fg 1</samp>.

<hr>

<a name="s-run-bg"></a>
<h3>7.7.5 bg</h3>

<p>
Permite fazer um programa rodando em primeiro plano ou parado, rodar em segundo
plano.  Para fazer um programa em primeiro plano rodar em segundo, é necessário
primeiro interromper a execução do comando com <samp>CTRL</samp>+
<samp>Z</samp>, será mostrado o número da tarefa interrompida, use este número
com o comando <code>bg</code> para iniciar a execução do comando em segundo
plano.

<p>
<samp>bg [<em>número</em>]</samp>

<p>
Onde: <em>número</em> número do programa obtido com o pressionamento das teclas
<samp>CTRL</samp>+<samp>Z</samp> ou através do comando <code>jobs</code>.

<hr>

<a name="s-run-kill"></a>
<h3>7.7.6 kill</h3>

<p>
Permite enviar um sinal a um comando/programa.  Caso seja usado sem parâmetros,
o <code>kill</code> enviará um sinal de término ao processo sendo executado.

<p>
<samp>kill [<em>opções</em>] [<em>sinal</em>] [<em>número</em>]</samp>

<p>
Onde:
<dl>
<dt><em>número</em></dt>
<dd>
É o número de identificação do processo obtido com o comando <a
href="#s-run-ps">ps, Seção 7.5</a>.  Também pode ser o número após o sinal de
<samp>%</samp> obtido pelo comando <code>jobs</code> para matar uma tarefa
interrompida.  Veja <a href="#s-run-ver-backgrounds">jobs, Seção 7.7.3</a>.
</dd>
<dt><em>sinal</em></dt>
<dd>
Sinal que será enviado ao processo.  Se omitido usa <samp>-15</samp> como
padrão.
</dd>
<dt><em>opções</em></dt>
<dt>-9</dt>
<dd>
Envia um sinal de destruição ao processo ou programa.  Ele é terminado
imediatamente sem chances de salvar os dados ou apagar os arquivos temporários
criados por ele.
</dd>
</dl>

<p>
Você precisa ser o dono do processo ou o usuário root para termina-lo ou
destruí-lo.  Você pode verificar se o processo foi finalizado através do
comando <code>ps</code>.  Os tipos de sinais aceitos pelo
<code>GNU/Linux</code> são explicados em detalhes em <a
href="#s-run-sinais">Sinais do Sistema, Seção 7.7.9</a>.

<p>
Exemplo: <samp>kill 500</samp>, <samp>kill -9 500</samp>, <samp>kill %1</samp>.

<hr>

<a name="s-run-killall"></a>
<h3>7.7.7 killall</h3>

<p>
Permite finalizar processos através do nome.

<p>
<samp>killall [<em>opções</em>] [<em>sinal</em>] [<em>processo</em>]</samp>

<p>
Onde:
<dl>
<dt><em>processo</em></dt>
<dd>
Nome do processo que deseja finalizar
</dd>
<dt><em>sinal</em></dt>
<dd>
Sinal que será enviado ao processo (pode ser obtido usando a opção
<samp>-i</samp>).
</dd>
<dt><em>opções</em></dt>
<dt>-i</dt>
<dd>
Pede confirmação sobre a finalização do processo.
</dd>
<dt>-l</dt>
<dd>
Lista o nome de todos os sinais conhecidos.
</dd>
<dt>-q</dt>
<dd>
Ignora a existência do processo.
</dd>
<dt>-v</dt>
<dd>
Retorna se o sinal foi enviado com sucesso ao processo.
</dd>
<dt>-w</dt>
<dd>
Finaliza a execução do <code>killall</code> somente após finalizar todos os
processos.
</dd>
</dl>

<p>
Os tipos de sinais aceitos pelo <code>GNU/Linux</code> são explicados em
detalhes na <a href="#s-run-sinais">Sinais do Sistema, Seção 7.7.9</a>.

<p>
Exemplo: <samp>killall -HUP inetd</samp>

<hr>

<a name="s-run-killall5"></a>
<h3>7.7.8 killall5</h3>

<p>
Envia um sinal de finalização para todos os processos sendo executados.

<p>
<samp>killall5 [<em>sinal</em>]</samp>

<hr>

<a name="s-run-sinais"></a>
<h3>7.7.9 Sinais do Sistema</h3>

<p>
Retirado da página de manual <samp>signal</samp>.  O <code>GNU/Linux</code>
suporta os sinais listados abaixo.  Alguns números de sinais são dependentes de
arquitetura.

<p>
Primeiro, os sinais descritos no <em>POSIX 1</em>:

<pre>
     Sinal   Valor     Ação    Comentário
     ---------------------------------------------------------------------------
     HUP        1        A      Travamento detectado no terminal de controle ou 
                                finalização do processo controlado
     INT        2        A      Interrupção através do teclado
     QUIT       3        C      Sair através do teclado
     ILL        4        C      Instrução Ilegal
     ABRT       6        C      Sinal de abortar enviado pela função abort
     FPE        8        C      Exceção de ponto Flutuante
     KILL       9       AEF     Sinal de destruição do processo
     SEGV      11        C      Referência Inválida de memória
     PIPE      13        A      Pipe Quebrado: escreveu para o pipe sem leitores
     ALRM      14        A      Sinal do Temporizador da chamada do sistema alarm
     TERM      15        A      Sinal de Término
     USR1   30,10,16     A      Sinal definido pelo usuário 1
     USR2   31,12,17     A      Sinal definido pelo usuário 2
     CHLD   20,17,18     B      Processo filho parado ou terminado
     CONT   19,18,25            Continuar a execução, se interrompido
     STOP   17,19,23    DEF     Interromper processo
     TSTP   18,20,24     D      Interromper digitação no terminal
     TTIN   21,21,26     D      Entrada do terminal para o processo em segundo plano
     TTOU   22,22,27     D      Saída do terminal para o processo em segundo plano
</pre>

<p>
As letras da coluna <samp>Ação</samp> tem o seguinte significado:
<ul>
<li>
<samp>A</samp> - A ação padrão é terminar o processo.
</li>
<li>
<samp>B</samp> - A ação padrão é ignorar o sinal.
</li>
<li>
<samp>C</samp> - A ação padrão é terminar o processo e mostrar o core.
</li>
<li>
<samp>D</samp> - A ação padrão é parar o processo.
</li>
<li>
<samp>E</samp> - O sinal não pode ser pego.
</li>
<li>
<samp>F</samp> - O sinal não pode ser ignorado.
</li>
</ul>

<p>
Sinais não descritos no <em>POSIX 1</em> mas descritos na <em>SUSv2</em>:

<pre>
     Sinal     Valor     Ação     Comentário
     -------------------------------------------------------------------------
     BUS      10,7,10      C      Erro no Barramento (acesso incorreto da memória)
     POLL                  A      Evento executado em Pool (Sys V). Sinônimo de IO
     PROF     27,27,29     A      Tempo expirado do Profiling
     SYS      12,-,12      C      Argumento inválido para a rotina (SVID)
     TRAP        5         C      Captura do traço/ponto de interrupção
     URG      16,23,21     B      Condição Urgente no soquete (4.2 BSD)
     VTALRM   26,26,28     A      Alarme virtual do relógio (4.2 BSD)
     XCPU     24,24,30     C      Tempo limite da CPU excedido (4.2 BSD)
     XFSZ     25,25,31     C      Limite do tamanho de arquivo excedido (4.2 BSD)
</pre>

<p>
(Para os casos SIGSYS, SIGXCPU, SIGXFSZ, e em algumas arquiteturas também o
SIGGUS, a ação padrão do Linux para kernels 2.3.27 e superiores é A (terminar),
enquanto SYSv2 descreve C (terminar e mostrar dump core).) Seguem vários outros
sinais:

<pre>
     Sinal     Valor     Ação     Comentário
     --------------------------------------------------------------------
     IOT         6         C      Traço IOT. Um sinônimo para ABRT
     EMT       7,-,7
     STKFLT    -,16,-      A      Falha na pilha do processador
     IO       23,29,22     A      I/O agora possível (4.2 BSD)
     CLD       -,-,18             Um sinônimo para CHLD
     PWR      29,30,19     A      Falha de força (System V)
     INFO      29,-,-             Um sinônimo para SIGPWR
     LOST      -,-,-       A      Perda do bloqueio do arquivo
     WINCH    28,28,20     B      Sinal de redimensionamento da Janela (4.3 BSD, Sun)
     UNUSED    -,31,-      A      Sinal não usado (será SYS)
</pre>

<p>
O &quot;-&quot; significa que o sinal não está presente.  Onde três valores são
listados, o primeiro é normalmente válido para o Alpha e Sparc, o do meio para
i386, PowerPc e sh, o último para o Mips.  O sinal 29 é SIGINFO/SIGPWR em um
Alpha mas SIGLOST em um Sparc.

<hr>

<a name="s-run-nohup"></a>
<h2>7.8 nohup</h2>

<p>
Executa um comando ignorando os sinais de interrupção.  O comando poderá ser
executado até mesmo em segundo plano caso seja feito o logout do sistema.

<p>
<samp>nohup [<em>comando que será executado</em>]</samp>

<p>
As mensagens de saída do <code>nohup</code> são direcionadas para o arquivo
<code>$HOME/nohup.out</code>.

<p>
Exemplo: <samp>nohup find / -uid 0 &gt;/tmp/rootfiles.txt &amp;</samp>.

<hr>

<a name="s-run-nice"></a>
<h2>7.9 nice</h2>

<p>
Configura a prioridade da execução de um comando/programa.

<p>
<samp>nice [<em>opções</em>] [<em>comando/programa</em>]</samp>

<p>
Onde:
<dl>
<dt><em>comando/programa</em></dt>
<dd>
Comando/programa que terá sua prioridade ajustada.
</dd>
<dt><em>opções</em></dt>
<dt>-n [numero]</dt>
<dd>
Configura a prioridade que o programa será executado.  Se um programa for
executado com maior prioridade, ele usará mais recursos do sistema para seu
processamento, caso tenha uma prioridade baixa, ele permitirá que outros
programas tenham preferência.  A prioridade de execução de um
<em>programa/comando</em> pode ser ajustada de -19 (a mais alta) até 19 (a mais
baixa).
</dd>
</dl>

<p>
Exemplo: <samp>nice -n -19 find / -name apropos</samp>.

<hr>

<a name="s-run-fuser"></a>
<h2>7.10 fuser</h2>

<p>
Permite identificar e fechar os processos que estão utilizando arquivos e
soquetes no sistema.

<p>
<samp>fuser [<em>opções</em>] [<em>nome</em>]</samp>

<p>
Onde:
<dl>
<dt><em>nome</em></dt>
<dd>
Especifica um nome de processo, diretório, arquivo, etc.
</dd>
<dt><em>opções</em></dt>
<dt>-k</dt>
<dd>
Finaliza os processos acessando o arquivo especificado.  O sinal desejado deve
ser especificado com a opção <samp>-signal [num]</samp>, ou o sinal -9 será
enviado como padrão.  Não é possível matar o próprio processo
<code>fuser</code>.
</dd>
<dt>-i</dt>
<dd>
Pergunta antes de destruir um processo.  Será ignorada caso a opção
<samp>-k</samp> não seja especificada.
</dd>
<dt>-l</dt>
<dd>
Lista todos os nomes de sinais conhecidos.
</dd>
<dt>-m [nome]</dt>
<dd>
Especifica um arquivo em um sistema de arquivos montado ou dispositivo de bloco
que está montado.  Todos os processos acessando aquele sistema de arquivos
serão listados.  Diretórios são mostrados seguidos de uma <samp>/</samp>
</dd>
<dt>-signal [número]</dt>
<dd>
Usa o sinal especificado ao invés de -9 (SIGKILL) quando finalizar processos.
</dd>
<dt>-u</dt>
<dd>
Acrescenta o nome do dono de cada processo ao PID.
</dd>
<dt>-v</dt>
<dd>
Os processos são mostrados em um estilo idêntico ao <code>ps</code>.
</dd>
</dl>

<hr>

<a name="s-run-tload"></a>
<h2>7.11 tload</h2>

<p>
Representa de forma gráfica a carga do sistema.

<p>
<samp>tload [<em>opções</em>]</samp>

<p>
Onde:
<dl>
<dt><em>opções</em></dt>
<dt>-s [número]</dt>
<dd>
Mostra uma escala vertical com espaçamento especificado por [número].  É
recomendável o uso de números entre 1 e 10 para melhor visualização da escala.
</dd>
<dt>-d [número]</dt>
<dd>
Especifica o intervalo entre atualizações, em segundos.
</dd>
</dl>

<hr>

<a name="s-run-vmstat"></a>
<h2>7.12 vmstat</h2>

<p>
Mostra estatísticas sobre o uso da memória virtual do sistema.

<p>
<samp>vmstat [<em>intervalo</em>] [<em>contagem</em>]</samp>

<p>
Onde:
<dl>
<dt><em>intervalo</em></dt>
<dd>
Número especificado em segundos entre atualizações.
</dd>
<dt><em>contagem</em></dt>
<dd>
Número de vezes que será mostrado.
</dd>
</dl>

<p>
Se não for especificado nenhum parâmetro, o <code>vmstat</code> mostra o status
da memória virtual e volta imediatamente para a linha de comando.  A descrição
dos campos do <code>vmstat</code> são as seguintes:
<dl>
<dt><em>Processos</em></dt>
<dt>r</dt>
<dd>
Número de processos aguardando execução.
</dd>
<dt>b</dt>
<dd>
Número de processos em espera não interrompíveis.
</dd>
<dt>w</dt>
<dd>
Número de processos extraídos do arquivo de troca ou caso contrário em
execução.
</dd>
<dt></dt>
<dt><em>Memória</em></dt>
<dt>swpd</dt>
<dd>
A quantidade de memória virtual usada em Kb.
</dd>
<dt>free</dt>
<dd>
Quantidade de memória livre em Kb.
</dd>
<dt>buff</dt>
<dd>
Quantidade de memória usada como buffer em Kb.
</dd>
<dt></dt>
<dt><em>Memória Virtual</em></dt>
<dt>si</dt>
<dd>
Quantidade de memória gravada para o disco Kb/s.
</dd>
<dt>so</dt>
<dd>
Quantidade de memória retirada do disco em Kb/s.
</dd>
<dt></dt>
<dt><em>Entrada/Saída</em></dt>
<dt>bi</dt>
<dd>
Blocos enviados para um dispositivo de bloco (medido em blocos por segundo).
</dd>
<dt>bo</dt>
<dd>
Blocos recebidos de um dispositivo de bloco (em blocos por segundo).
</dd>
<dt></dt>
<dt><em>Sistema</em></dt>
<dt>in</dt>
<dd>
Número de interrupções por segundo, incluindo o clock.
</dd>
<dt>cs</dt>
<dd>
Número de mudanças de contexto por segundo.
</dd>
<dt></dt>
<dt><em>Porcentagem do total de tempo da CPU</em></dt>
<dt>us</dt>
<dd>
Tempo do usuário
</dd>
<dt>sy</dt>
<dd>
Tempo do sistema
</dd>
<dt>id</dt>
<dd>
Tempo ocioso
</dd>
</dl>

<hr>

<a name="s-run-pidof"></a>
<h2>7.13 pidof</h2>

<p>
Retorna o PID do processo especificado

<p>
<samp>pidof [<em>opções</em>] [<em>nome</em>]</samp>

<p>
Onde:
<dl>
<dt><em>nome</em></dt>
<dd>
Nome do processo que seja obter o número PID
</dd>
<dt><em>opções</em></dt>
<dt>-s</dt>
<dd>
Retorna somente o primeiro PID encontrado.
</dd>
<dt>-x</dt>
<dd>
Retorna o PID do do shell que está executando o script
</dd>
<dt>-o [PID]</dt>
<dd>
Ignora o processo com aquele PID.  O PID especial %PPID pode ser usado para
nomear o processo pai do programa <code>pidof</code>, em outras palavras
</dd>
</dl>

<p>
OBS: O programa <code>pidof</code> é um link simbólico ao programa
<code>killall5</code>.  Cuidado ao executar o <code>killall5</code> as funções
e opções são completamente diferentes dependendo da forma como é chamado na
linha de comando!  (veja <a href="#s-run-killall5">killall5, Seção 7.7.8</a>
para detalhes.)

<p>
Exemplo: <samp>pidof -s init</samp>

<hr>

<a name="s-run-pstree"></a>
<h2>7.14 pstree</h2>

<p>
Mostra a estrutura de processos em execução no sistema em forma de árvore.

<p>
<samp>pstree [<em>opções</em>] [<em>pid</em>]</samp>

<p>
Onde:
<dl>
<dt><em>pid</em></dt>
<dd>
Número do processo que terá sua árvore listada.  Se omitido, lista todos os
processos.
</dd>
<dt><em>opções</em></dt>
<dt>-a</dt>
<dd>
Mostra opções passadas na linha de comando.
</dd>
<dt>-c</dt>
<dd>
Mostra toda a estrutura (inclusive sub-processos do processo pai).
</dd>
<dt>-G</dt>
<dd>
Usa caracteres gráficos no desenho da árvore de processos.
</dd>
<dt>-h</dt>
<dd>
Destaca o processo atual e seus antecessores.
</dd>
<dt>-H [pid]</dt>
<dd>
Destaca o processo especificado.
</dd>
<dt>-l</dt>
<dd>
Não faz quebra de linha
</dd>
<dt>-n</dt>
<dd>
Classifica pelo número PID ao invés do nome.
</dd>
<dt>-p</dt>
<dd>
Mostra o número PID entre parênteses após o nome do processo.
</dd>
<dt>-u</dt>
<dd>
Mostra também o dono do processo.
</dd>
<dt>-U</dt>
<dd>
Usa o conjunto de caracteres Unicode para o desenho da árvore.
</dd>
</dl>

<hr>

<a name="s-run-fechando"></a>
<h2>7.15 Fechando um programa quando não se sabe como sair</h2>

<p>
Muitas vezes quando se esta iniciando no <code>GNU/Linux</code> você pode
executar um programa e talvez não saber como fecha-lo.  Este capítulo do guia
pretende ajuda-lo a resolver este tipo de problema.

<p>
Isto pode também ocorrer com programadores que estão construindo seus programas
e por algum motivo não implementam uma opção de saída, ou ela não funciona!

<p>
Em nosso exemplo vou supor que executamos um programa em desenvolvimento com o
nome <code>contagem</code> que conta o tempo em segundos a partir do momento
que é executado, mas que o programador esqueceu de colocar uma opção de saída.
Siga estas dicas para finaliza-lo:
<ol type="1" start="1" >
<li>
Normalmente todos os programas <code>UNIX</code> (o <code>GNU/Linux</code>
também é um Sistema Operacional baseado no <code>UNIX</code>) podem ser
interrompidos com o pressionamento das teclas <samp>&lt;CTRL&gt;</samp> e
<samp>&lt;C&gt;</samp>.  Tente isto primeiro para finalizar um programa.  Isto
provavelmente não vai funcionar se estiver usando um Editor de Texto (ele vai
entender como um comando de menu).  Isto normalmente funciona para comandos que
são executados e terminados sem a intervenção do usuário.

<p>
Caso isto não der certo, vamos partir para a força!  ;-)
</li>
</ol>
<ol type="1" start="2" >
<li>
Mude para um novo console (pressionando <samp>&lt;ALT&gt;</samp> e
<samp>&lt;F2&gt;</samp>), e faça o <em>login</em> como usuário
<strong>root</strong>.
</li>
</ol>
<ol type="1" start="3" >
<li>
Localize o PID (número de identificação do processo) usando o comando: <samp>ps
ax</samp>, aparecerão várias linhas cada uma com o número do processo na
primeira coluna, e a linha de comando do programa na última coluna.  Caso
aparecerem vários processos você pode usar <samp>ps ax|grep contagem</samp>,
neste caso o <code>grep</code> fará uma filtragem da saída do comando <samp>ps
ax</samp> mostrando somente as linhas que tem a palavra &quot;contagem&quot;.
Para maiores detalhes, veja o comando <a href="ch-cmdv.htm#s-cmdv-grep">grep,
Seção 10.8</a>.
</li>
</ol>
<ol type="1" start="4" >
<li>
Feche o processo usando o comando <samp>kill <em>PID</em></samp>, lembre-se de
substituir PID pelo número encontrado pelo comando <code>ps ax</code> acima.

<p>
O comando acima envia um sinal de término de execução para o processo (neste
caso o programa <code>contagem</code>).  O sinal de término mantém a chance do
programa salvar seus dados ou apagar os arquivos temporários que criou e então
ser finalizado, isto depende do programa.
</li>
</ol>
<ol type="1" start="5" >
<li>
Alterne para o console onde estava executando o programa <code>contagem</code>
e verifique se ele ainda está em execução.  Se ele estiver parado mas o aviso
de comando não está disponível, pressione a tecla &lt;ENTER&gt;.
Freqüentemente acontece isto com o comando <code>kill</code>, você finaliza um
programa mas o aviso de comando não é mostrado até que se pressione
&lt;ENTER&gt;.
</li>
</ol>
<ol type="1" start="6" >
<li>
Caso o programa ainda não foi finalizado, repita o comando <code>kill</code>
usando a opção -9: <samp>kill -9 PID</samp>.  Este comando envia um sinal de
DESTRUIÇÃO do processo, fazendo ele terminar &quot;na marra&quot;!
</li>
</ol>

<p>
Uma última dica: todos os programas estáveis (todos que acompanham as boas
distribuições <code>GNU/Linux</code>) tem sua opção de saída.  Lembre-se que
quando finaliza um processo todos os dados do programa em execução podem ser
perdidos (principalmente se estiver em um editor de textos), mesmo usando o
<code>kill</code> sem o parâmetro <samp>-9</samp>.

<p>
Procure a opção de saída de um programa consultando o help on line, as páginas
de manual, a documentação que acompanha o programa, info pages.  Para detalhes
de como encontrar a ajuda dos programas, veja o <a href="ch-ajuda.htm">Como
obter ajuda no sistema, Capítulo 31</a>

<hr>

<a name="s-run-reset"></a>
<h2>7.16 Eliminando caracteres estranhos</h2>

<p>
As vezes quando um programa <samp>mal comportado</samp> é finalizado ou quando
você visualiza um arquivo binário através do comando <samp>cat</samp>, é
possível que o aviso de comando (prompt) volte com caracteres estranhos.

<p>
Para fazer tudo voltar ao normal, basta digitar <samp>reset</samp> e teclar
<samp>ENTER</samp>.  Não se preocupe, o comando <samp>reset</samp> não
reiniciará seu computador (como o botão reset do seu computador faz), ele
apenas fará tudo voltar ao normal.

<p>
Note que enquanto você digitar <samp>reset</samp> aparecerão caracteres
estranhos ao invés das letras.  Não se preocupe!  Basta digitar corretamente e
bater <samp>ENTER</samp> e o aviso de comando voltará ao normal.

<hr>

[ <a href="ch-boot.htm">anterior</a> ]
[ <a href="index.htm#contents">Conteúdo</a> ]
[ <a href="ch-intro.htm">1</a> ]
[ <a href="ch-bas.htm">2</a> ]
[ <a href="ch-hardw.htm">3</a> ]
[ <a href="ch-d-l.htm">4</a> ]
[ <a href="ch-disc.htm">5</a> ]
[ <a href="ch-boot.htm">6</a> ]
[ 7 ]
[ <a href="ch-cmdd.htm">8</a> ]
[ <a href="ch-cmd.htm">9</a> ]
[ <a href="ch-cmdv.htm">10</a> ]
[ <a href="ch-cmdn.htm">11</a> ]
[ <a href="ch-cmdc.htm">12</a> ]
[ <a href="ch-perm.htm">13</a> ]
[ <a href="ch-redir.htm">14</a> ]
[ <a href="ch-rede.htm">15</a> ]
[ <a href="ch-kern.htm">16</a> ]
[ <a href="ch-log.htm">17</a> ]
[ <a href="ch-cpctd.htm">18</a> ]
[ <a href="ch-deb.htm">19</a> ]
[ <a href="ch-dpkg.htm">20</a> ]
[ <a href="ch-pers.htm">21</a> ]
[ <a href="ch-impr.htm">22</a> ]
[ <a href="ch-cfg.htm">23</a> ]
[ <a href="ch-tasks.htm">24</a> ]
[ <a href="ch-compil.htm">25</a> ]
[ <a href="ch-manut.htm">26</a> ]
[ <a href="ch-etc.htm">27</a> ]
[ <a href="ch-inter.htm">28</a> ]
[ <a href="ch-x11.htm">29</a> ]
[ <a href="ch-aplic.htm">30</a> ]
[ <a href="ch-ajuda.htm">31</a> ]
[ <a href="ch-apend.htm">32</a> ]
[ <a href="ch-cmdd.htm">próximo</a> ]

<hr>

<p>
Guia Foca GNU/Linux

<address>
Versão 5.45 - segunda, 30 de outubro de 2006<br>
<br>
Gleydson Mazioli da Silva <code><a href="mailto:gleydson@guiafoca.org">gleydson@guiafoca.org</a></code><br>
<br>
</address>

<hr>

</body>

</html>

